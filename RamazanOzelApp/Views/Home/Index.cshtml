@{
    ViewData["Title"] = "Home Page";
}

<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />

<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>

<style>
    #map {
        width: 100%;
        height: 600px;
    }

    .leaflet-popup-content-wrapper {
        width: 390px;
        max-width: 100%;
    }
</style>

<div id="map"></div>

<script>
    var map, currentDate, currentTime,
        currentHour, currentMinute, currentSecond,
        cityName, cityLat, cityLng, cityLatLng,
        imsak, sabah, ogle, ikindi, aksam, yatsi, iftar;

    // Harita Oluştur
    function CreateMap(lat, lng, zoom, maxZoom) {
        openstreetmap = L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', { maxZoom: maxZoom });
        googlemap = L.tileLayer('http://www.google.cn/maps/vt?lyrs=s@189&gl=cn&x={x}&y={y}&z={z}', {});
        map = new L.Map('map', { center: new L.LatLng(lat, lng), zoom: zoom });
        openstreetmap.addTo(map);
        switchLayer();
    }

    // Katman Değiştir
    function switchLayer() {
        L.control.layers({
            'OpenStreetMap': openstreetmap,
            'Google': googlemap
        }).addTo(map);
    }

    // Türkiye şehirlerinin GeoJSON verisi
    function TurkeyGeoJsonDatas() {
        const url = `https://raw.githubusercontent.com/cihadturhan/tr-geojson/master/geo/tr-cities-utf8.json`;
        fetch(url)
            .then(response => response.json())
            .then(data => {
                L.geoJSON(data, {
                    style: function (feature) {
                        return { color: "orangered", weight: 2, fillOpacity: 0.3 };
                    },
                    onEachFeature: function (feature, layer) {
                        layer.on('click', function () {
                            getCoordinatesFromOSM(feature.properties.name);
                        });
                    }
                }).addTo(map);
            })
            .catch(error => console.error("GeoJSON yüklenemedi:", error));
    }

    // Şehrin Koordinatlarını Bulma
    function getCoordinatesFromOSM(cityName) {
        const url = `https://nominatim.openstreetmap.org/search?q=${cityName}&format=json`;

        fetch(url)
            .then(response => response.json())
            .then(data => {
                if (data.length > 0) {
                    const coordinates = {
                        lat: data[0].lat,
                        lng: data[0].lon
                    };
                    TurkeyImsakiyeDatas(cityName, coordinates.lat, coordinates.lng);
                } else {
                    console.error('Koordinatlar bulunamadı!');
                }
            })
            .catch(error => console.error('Geocoding hatası:', error));
    }

    // İmsakiye Verilerini API'den Çekme
    function TurkeyImsakiyeDatas(cityName, lat, lng) {
        const url = `https://api.aladhan.com/v1/timings?latitude=${lat}&longitude=${lng}&method=2`;
        fetch(url)
            .then(response => response.json())
            .then(data => {
                if (data.code === 200) {
                    const timings = data.data.timings;
                    imsak = timings.Imsak;      // Sahur
                    sabah = timings.Fajr;       // Sabah
                    ogle = timings.Dhuhr;       // Öğle
                    ikindi = timings.Asr;       // İkindi
                    aksam = timings.Maghrib;    // Akşam - İftar
                    yatsi = timings.Isha;       // Yatsı - Teravih
                    showImsakiyePopup(cityName, lat, lng, timings);
                    iftar = aksam;
                } else {
                    alert("İmsakiye bilgisi alınamadı.");
                }
            })
            .catch(error => console.error('API hatası:', error));
    }
    // Popup Sürükleme
    function makeDraggable(popup) {
        var pos = map.latLngToLayerPoint(popup.getLatLng());
        L.DomUtil.setPosition(popup._wrapper.parentNode, pos);
        var draggable = new L.Draggable(popup._container, popup._wrapper);
        draggable.enable();

        draggable.on('dragend', function () {
            var pos = map.layerPointToLatLng(this._newPos);
            popup.setLatLng(pos);
        });
    }

    // İmsakiye Popup'ı Gösterme
    function showImsakiyePopup(cityName, lat, lng, timings) {

        const popupContent = `
            <div style="text-align: center; font-size: 16px; font-family: Arial, sans-serif; padding: 15px; width:350px">

                <div style="font-size: 20px; font-weight: bold; margin-bottom: 5px;">
                    ${cityName.toUpperCase()}
                </div>
                <div id="current" style="font-size: 16px; background: #f4f4f4; padding: 5px; border-radius: 5px; margin-bottom: 15px;">
                  <!-- Güncel Tarih ve Saat Verisi -->
                </div>

                <div style="display: flex; flex-wrap: wrap; justify-content: center; gap: 10px;">

                    <div style="width: 100px; padding: 10px; background-color:goldenrod; color:white; border-radius: 8px; box-shadow: 2px 2px 5px rgba(0,0,0,0.1);">
                        <strong>İmsak</strong><br>
                        <span style="font-size: 18px;">${imsak}</span>
                    </div>

                        <div style="width: 100px; padding: 10px; background-color:orangered; color:white; border-radius: 8px; box-shadow: 2px 2px 5px rgba(0,0,0,0.1);">
                        <strong>Sabah</strong><br>
                        <span style="font-size: 18px;">${sabah}</span>
                    </div>

                        <div style="width: 100px; padding: 10px; background-color:red; color:white; border-radius: 8px; box-shadow: 2px 2px 5px rgba(0,0,0,0.1);">
                        <strong>Öğle</strong><br>
                        <span style="font-size: 18px;">${ogle}</span>
                    </div>

                        <div style="width: 100px; padding: 10px; background-color:green; color:white; border-radius: 8px; box-shadow: 2px 2px 5px rgba(0,0,0,0.1);">
                        <strong>İkindi</strong><br>
                        <span style="font-size: 18px;">${ikindi}</span>
                    </div>

                        <div style="width: 100px; padding: 10px; background-color:blue; color:white; border-radius: 8px; box-shadow: 2px 2px 5px rgba(0,0,0,0.1);">
                        <strong>Akşam</strong><br>
                        <span style="font-size: 18px;">${aksam}</span>
                    </div>

                        <div style="width: 100px; padding: 10px; background-color:black; color:white; border-radius: 8px; box-shadow: 2px 2px 5px rgba(0,0,0,0.1);">
                        <strong>Yatsı</strong><br>
                        <span style="font-size: 18px;">${yatsi}</span>
                    </div>

                </div>

                <div style="margin-top: 15px; font-size: 18px; font-weight: bold; background: #f4f4f4; padding: 10px; border-radius: 5px;">
                    <span id="remainingType">X</span> Kalan Süre:
                    <br>
                    <span id="iftarCountdown" style="font-size: 22px; font-weight: bold;">
                    <!--İftara Kalan Süre-->
                    </span>
                </div>

            </div>
        `;

        const popup = L.popup()
            .setLatLng([lat, lng])
            .setContent(popupContent)
            .openOn(map);

        makeDraggable(popup);
    }

    // Günün Tarihi Bul
    function GetCurrentDate() {
        var today = new Date();
        var currentDay = today.getDate();
        if (currentDay < 10) {
            currentDay = "0" + currentDay;
        }
        var currentMonth = today.getMonth() + 1;
        if (currentMonth < 10) {
            currentMonth = "0" + currentMonth;
        }
        var currentYear = today.getFullYear();
        if (currentYear < 10) {
            currentYear = "0" + currentYear;
        }
        return currentDate = currentDay + "/" + currentMonth + "/" + currentYear;
    }

    // Günün Saatini Bul
    function GetCurrentTime() {
        var today = new Date();
        currentHour = today.getHours();

        if (currentHour < 10) {
            currentHour = "0" + currentHour;
        }

        currentMinute = today.getMinutes();

        if (currentMinute < 10) {
            currentMinute = "0" + currentMinute;
        }

        currentSecond = today.getSeconds();

        if (currentSecond < 10) {
            currentSecond = "0" + currentSecond;
        }
        return currentTime = currentHour + ":" + currentMinute + ":" + currentSecond;
    }

    // İftara Kalan Süreyi Güncelle
    function UpdateIftarCountdown() {

        if (!iftar) {
            // İftar verisi gelmemişse, iftar saati için hesaplama yapma
            return;
        }

        var currentTimeInSeconds = currentHour * 3600 + currentMinute * 60 + currentSecond;

        var iftarTimeParts = aksam.split(":");
        var iftarHour = parseInt(iftarTimeParts[0]);
        var iftarMinute = parseInt(iftarTimeParts[1]);
        var iftarTimeInSeconds = iftarHour * 3600 + iftarMinute * 60;

        var remainingTimeInSeconds = iftarTimeInSeconds - currentTimeInSeconds;

        if (remainingTimeInSeconds > 0) {
            var remainingHours = Math.floor(remainingTimeInSeconds / 3600);
            var remainingMinutes = Math.floor((remainingTimeInSeconds % 3600) / 60);
            var remainingSeconds = remainingTimeInSeconds % 60;

            var remainingText = (remainingHours < 10 ? '0' : '') + remainingHours + ' : ' + (remainingMinutes < 10 ? '0' : '') + remainingMinutes + ' : ' + (remainingSeconds < 10 ? '0' : '') + remainingSeconds;
            document.getElementById("iftarCountdown").innerHTML = remainingText;

            if (remainingTimeInSeconds < 3600) {
                document.getElementById("iftarCountdown").style.color = 'red';
            } else if (remainingTimeInSeconds < 21600) {
                document.getElementById("iftarCountdown").style.color = 'orangered';
            } else if (remainingTimeInSeconds < 36000) {
                document.getElementById("iftarCountdown").style.color = 'goldenrod';
            } else {
                document.getElementById("iftarCountdown").style.color = 'black';
            }
        } else {
            document.getElementById("iftarCountdown").innerHTML = "İftar vakti geldi!";
            document.getElementById("iftarCountdown").style.color = 'green';
        }
    }

    // Anlık Saati Güncelle
    function UpdateTime() {
        GetCurrentTime();
        document.getElementById('current').innerHTML = `<strong>${currentDate} - ${currentTime}</strong>`;
        UpdateIftarCountdown();
    }

    // Sayfa Açıldığında Çalışacak Fonksiyonlar
    function initialize() {
        currentDate = GetCurrentDate();
        CreateMap(39.0, 35.0, 6, 18);
        setInterval(UpdateTime, 1000);
        TurkeyGeoJsonDatas();
    }
    initialize();
</script>